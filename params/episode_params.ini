[episodes_params]
# names of which tests to include in the final benchmark
tests=['test1']
#, 'area3_test', 'medium_map_test', 'big_map_test']
# Whether or not to run a lite-version of the simulator without the robot
without_robot=True


[test1]
map_name=openspace
# Starting position for the prerecorded agents
prerec_start_indxs=[15]
# all the filenames for the data used to gather the prerecorded humans
prerec_data_filenames=['world_coordinate_inter.csv']
# framerates of all the recorded human data files
prerec_data_framerates=[25]
# positional offsets of all the recorded human files
prerec_posn_offset=[[14.0, 2.0, 0.0]]
## NOTE: all pos_3's are (x, y, theta)
# start pos_3's of the generated agent configs
use_gen_agents = False
agents_start=[[24, 11, 3.14], [9, 10, 0], [16, 2, 0]]
# end pos_3's of the generated agent configs
agents_end=[[10, 2, 3.14], [15, 4, -1.57], [20, 4, 0.1]]
# start and goal pos_3's of the robot
robot_start_goal=[[15, 7, 0], [20, 8, -0.2]]
# maximum time provided for this test 
max_time=40
# to write the episode log at the end of the simulation
write_episode_log=True 


[area3_test]
map_name=small_area3
# Starting position for the prerecorded agents
prerec_start_indxs=[50]
# all the filenames for the data used to gather the prerecorded humans
prerec_data_filenames=['world_coordinate_inter.csv']
# framerates of all the recorded human data files
prerec_data_framerates=[25]
# positional offsets of all the recorded human files
prerec_posn_offset=[[7.0, 0.0, 0.0]]
## NOTE: all pos_3's are (x, y, theta)
# start pos_3's of the generated agent configs
agents_start=[]
# end pos_3's of the generated agent configs
agents_end=[]
# start and goal pos_3's of the robot
robot_start_goal=[[8.0, 8.5, 0], [15, 3, -0.2]]
# maximum time provided for this test 
max_time=15
# to write the episode log at the end of the simulation
write_episode_log=True 


[no_agents]
map_name=small_area3
# Starting position for the prerecorded agents
prerec_start_indxs=[]
# all the filenames for the data used to gather the prerecorded humans
prerec_data_filenames=[]
# framerates of all the recorded human data files
prerec_data_framerates=[]
# positional offsets of all the recorded human files
prerec_posn_offset=[]
## NOTE: all pos_3's are (x, y, theta)
# start pos_3's of the generated agent configs
agents_start=[]
# end pos_3's of the generated agent configs
agents_end=[]
# start and goal pos_3's of the robot
robot_start_goal=[[9.0, 8.5, 0], [15, 18, 0.2]]
# maximum time provided for this test 
max_time=25
# to write the episode log at the end of the simulation
write_episode_log=True 


[medium_map_test]
map_name=openspace
# Starting position for the prerecorded agents
prerec_start_indxs=[0]
# all the filenames for the data used to gather the prerecorded humans
prerec_data_filenames=['world_coordinate_inter.csv']
# framerates of all the recorded human data files
prerec_data_framerates=[25]
# positional offsets of all the recorded human files
prerec_posn_offset=[[8.0, 1.0, 0.0]]
## NOTE: all pos_3's are (x, y, theta)
# start pos_3's of the generated agent configs
agents_start=[]
# end pos_3's of the generated agent configs
agents_end=[]
# start and goal pos_3's of the robot
robot_start_goal=[[5, 8, 0], [22, 4, -0.2]]
# maximum time provided for this test 
max_time=20
# to write the episode log at the end of the simulation
write_episode_log=True 


[big_map_test]
map_name=bigspace
# Starting position for the prerecorded agents
prerec_start_indxs=[0]
# all the filenames for the data used to gather the prerecorded humans
prerec_data_filenames=['world_coordinate_inter.csv']
# framerates of all the recorded human data files
prerec_data_framerates=[25]
# positional offsets of all the recorded human files
prerec_posn_offset=[[14.0, 2.0, 0.0]]
## NOTE: all pos_3's are (x, y, theta)
# start pos_3's of the generated agent configs
agents_start=[]
# end pos_3's of the generated agent configs
agents_end=[]
# start and goal pos_3's of the robot
robot_start_goal=[[21, 10, 1.57], [13, 15, 3.14]]
# maximum time provided for this test 
max_time=20
# to write the episode log at the end of the simulation
write_episode_log=True 
